name: C/C++ CI

on: [push]

jobs:
  Spicy-build:
    runs-on: windows-latest
    steps:
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.12.4'
        host: 'windows'
        target: 'desktop'
        py7zrversion: '==0.10.1'
    - name: Download Ninja and CMake
      id: cmake_and_ninja
      shell: cmd
      run: |
        set(ninja_version "1.9.0")
        set(cmake_version "3.16.2")
        set(ninja_suffix "win.zip")
        set(cmake_suffix "win64-x64.zip")
        set(cmake_dir "cmake-${cmake_version}-win64-x64/bin")

        set(ninja_url "https://github.com/ninja-build/ninja/releases/download/v${ninja_version}/ninja-${ninja_suffix}")
        file(DOWNLOAD "${ninja_url}" ./ninja.zip SHOW_PROGRESS)
        execute_process(COMMAND ${CMAKE_COMMAND} -E tar xvf ./ninja.zip)

        set(cmake_url "https://github.com/Kitware/CMake/releases/download/v${cmake_version}/cmake-${cmake_version}-${cmake_suffix}")
        file(DOWNLOAD "${cmake_url}" ./cmake.zip SHOW_PROGRESS)
        execute_process(COMMAND ${CMAKE_COMMAND} -E tar xvf ./cmake.zip)

        # Save the path for other steps
        file(TO_CMAKE_PATH "$ENV{GITHUB_WORKSPACE}/${cmake_dir}" cmake_dir)
        message("::set-output name=cmake_dir::${cmake_dir}")
    - name: Configure
      shell: cmd
      run: |
        set(ENV{CC} ${ { matrix.config.cc } })
        set(ENV{CXX} ${ { matrix.config.cxx } })

        execute_process(
          COMMAND "${ { matrix.config.environment_script } }" && set
          OUTPUT_FILE environment_script_output.txt
        )
        file(STRINGS environment_script_output.txt output_lines)
        foreach(line IN LISTS output_lines)
          if (line MATCHES "^([a-zA-Z0-9_-]+)=(.*)$")
          set(ENV{${CMAKE_MATCH_1} } "${CMAKE_MATCH_2}")
          endif()
        endforeach()

        file(TO_CMAKE_PATH "$ENV{GITHUB_WORKSPACE}/ninja" ninja_program)

        execute_process(
        COMMAND ${ { steps.cmake_and_ninja.outputs.cmake_dir } }/cmake
          -S .
          -B build
          -D CMAKE_BUILD_TYPE=${ { matrix.config.build_type } }
          -G Ninja
          -D CMAKE_MAKE_PROGRAM=${ninja_program}
        RESULT_VARIABLE result
        )
        if (NOT result EQUAL 0)
          message(FATAL_ERROR "Bad exit status")
        endif()
        
    - name: Build
      shell: cmd
      run: |
        set(ENV{NINJA_STATUS} "[%f/%t %o/sec] ")

        file(STRINGS environment_script_output.txt output_lines)
        foreach(line IN LISTS output_lines)
          if (line MATCHES "^([a-zA-Z0-9_-]+)=(.*)$")
            set(ENV{${CMAKE_MATCH_1} } "${CMAKE_MATCH_2}")
          endif()
        endforeach()

        execute_process(
          COMMAND ${ { steps.cmake_and_ninja.outputs.cmake_dir } }/cmake --build build
          RESULT_VARIABLE result
        )
        if (NOT result EQUAL 0)
          message(FATAL_ERROR "Bad exit status")
        endif()
